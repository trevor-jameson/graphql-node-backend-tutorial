module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCharacter {
  count: Int!
}

type AggregateSpell {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Character {
  id: ID!
  name: String!
  createdAt: DateTime!
  user: User!
  spells(where: SpellWhereInput, orderBy: SpellOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Spell!]
}

type CharacterConnection {
  pageInfo: PageInfo!
  edges: [CharacterEdge]!
  aggregate: AggregateCharacter!
}

input CharacterCreateInput {
  id: ID
  name: String!
  user: UserCreateOneWithoutCharactersInput!
  spells: SpellCreateManyInput
}

input CharacterCreateManyWithoutUserInput {
  create: [CharacterCreateWithoutUserInput!]
  connect: [CharacterWhereUniqueInput!]
}

input CharacterCreateWithoutUserInput {
  id: ID
  name: String!
  spells: SpellCreateManyInput
}

type CharacterEdge {
  node: Character!
  cursor: String!
}

enum CharacterOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
}

type CharacterPreviousValues {
  id: ID!
  name: String!
  createdAt: DateTime!
}

input CharacterScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [CharacterScalarWhereInput!]
  OR: [CharacterScalarWhereInput!]
  NOT: [CharacterScalarWhereInput!]
}

type CharacterSubscriptionPayload {
  mutation: MutationType!
  node: Character
  updatedFields: [String!]
  previousValues: CharacterPreviousValues
}

input CharacterSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CharacterWhereInput
  AND: [CharacterSubscriptionWhereInput!]
  OR: [CharacterSubscriptionWhereInput!]
  NOT: [CharacterSubscriptionWhereInput!]
}

input CharacterUpdateInput {
  name: String
  user: UserUpdateOneRequiredWithoutCharactersInput
  spells: SpellUpdateManyInput
}

input CharacterUpdateManyDataInput {
  name: String
}

input CharacterUpdateManyMutationInput {
  name: String
}

input CharacterUpdateManyWithoutUserInput {
  create: [CharacterCreateWithoutUserInput!]
  delete: [CharacterWhereUniqueInput!]
  connect: [CharacterWhereUniqueInput!]
  set: [CharacterWhereUniqueInput!]
  disconnect: [CharacterWhereUniqueInput!]
  update: [CharacterUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [CharacterUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [CharacterScalarWhereInput!]
  updateMany: [CharacterUpdateManyWithWhereNestedInput!]
}

input CharacterUpdateManyWithWhereNestedInput {
  where: CharacterScalarWhereInput!
  data: CharacterUpdateManyDataInput!
}

input CharacterUpdateWithoutUserDataInput {
  name: String
  spells: SpellUpdateManyInput
}

input CharacterUpdateWithWhereUniqueWithoutUserInput {
  where: CharacterWhereUniqueInput!
  data: CharacterUpdateWithoutUserDataInput!
}

input CharacterUpsertWithWhereUniqueWithoutUserInput {
  where: CharacterWhereUniqueInput!
  update: CharacterUpdateWithoutUserDataInput!
  create: CharacterCreateWithoutUserInput!
}

input CharacterWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  user: UserWhereInput
  spells_every: SpellWhereInput
  spells_some: SpellWhereInput
  spells_none: SpellWhereInput
  AND: [CharacterWhereInput!]
  OR: [CharacterWhereInput!]
  NOT: [CharacterWhereInput!]
}

input CharacterWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Mutation {
  createCharacter(data: CharacterCreateInput!): Character!
  updateCharacter(data: CharacterUpdateInput!, where: CharacterWhereUniqueInput!): Character
  updateManyCharacters(data: CharacterUpdateManyMutationInput!, where: CharacterWhereInput): BatchPayload!
  upsertCharacter(where: CharacterWhereUniqueInput!, create: CharacterCreateInput!, update: CharacterUpdateInput!): Character!
  deleteCharacter(where: CharacterWhereUniqueInput!): Character
  deleteManyCharacters(where: CharacterWhereInput): BatchPayload!
  createSpell(data: SpellCreateInput!): Spell!
  updateSpell(data: SpellUpdateInput!, where: SpellWhereUniqueInput!): Spell
  updateManySpells(data: SpellUpdateManyMutationInput!, where: SpellWhereInput): BatchPayload!
  upsertSpell(where: SpellWhereUniqueInput!, create: SpellCreateInput!, update: SpellUpdateInput!): Spell!
  deleteSpell(where: SpellWhereUniqueInput!): Spell
  deleteManySpells(where: SpellWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  character(where: CharacterWhereUniqueInput!): Character
  characters(where: CharacterWhereInput, orderBy: CharacterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Character]!
  charactersConnection(where: CharacterWhereInput, orderBy: CharacterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CharacterConnection!
  spell(where: SpellWhereUniqueInput!): Spell
  spells(where: SpellWhereInput, orderBy: SpellOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Spell]!
  spellsConnection(where: SpellWhereInput, orderBy: SpellOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SpellConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Spell {
  id: ID!
  api5eId: String!
  api5eIndex: String!
  name: String!
  description: String!
  highLevel: String!
  page: String!
  range: String!
  components: String!
  ritual: Boolean!
  concentration: Boolean!
  duration: String!
  castingTime: String!
  material: String!
  level: Int!
  school: String!
  klasses: String!
}

type SpellConnection {
  pageInfo: PageInfo!
  edges: [SpellEdge]!
  aggregate: AggregateSpell!
}

input SpellCreateInput {
  id: ID
  api5eId: String!
  api5eIndex: String!
  name: String!
  description: String!
  highLevel: String!
  page: String!
  range: String!
  components: String!
  ritual: Boolean!
  concentration: Boolean!
  duration: String!
  castingTime: String!
  material: String!
  level: Int!
  school: String!
  klasses: String!
}

input SpellCreateManyInput {
  create: [SpellCreateInput!]
  connect: [SpellWhereUniqueInput!]
}

type SpellEdge {
  node: Spell!
  cursor: String!
}

enum SpellOrderByInput {
  id_ASC
  id_DESC
  api5eId_ASC
  api5eId_DESC
  api5eIndex_ASC
  api5eIndex_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  highLevel_ASC
  highLevel_DESC
  page_ASC
  page_DESC
  range_ASC
  range_DESC
  components_ASC
  components_DESC
  ritual_ASC
  ritual_DESC
  concentration_ASC
  concentration_DESC
  duration_ASC
  duration_DESC
  castingTime_ASC
  castingTime_DESC
  material_ASC
  material_DESC
  level_ASC
  level_DESC
  school_ASC
  school_DESC
  klasses_ASC
  klasses_DESC
}

type SpellPreviousValues {
  id: ID!
  api5eId: String!
  api5eIndex: String!
  name: String!
  description: String!
  highLevel: String!
  page: String!
  range: String!
  components: String!
  ritual: Boolean!
  concentration: Boolean!
  duration: String!
  castingTime: String!
  material: String!
  level: Int!
  school: String!
  klasses: String!
}

input SpellScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  api5eId: String
  api5eId_not: String
  api5eId_in: [String!]
  api5eId_not_in: [String!]
  api5eId_lt: String
  api5eId_lte: String
  api5eId_gt: String
  api5eId_gte: String
  api5eId_contains: String
  api5eId_not_contains: String
  api5eId_starts_with: String
  api5eId_not_starts_with: String
  api5eId_ends_with: String
  api5eId_not_ends_with: String
  api5eIndex: String
  api5eIndex_not: String
  api5eIndex_in: [String!]
  api5eIndex_not_in: [String!]
  api5eIndex_lt: String
  api5eIndex_lte: String
  api5eIndex_gt: String
  api5eIndex_gte: String
  api5eIndex_contains: String
  api5eIndex_not_contains: String
  api5eIndex_starts_with: String
  api5eIndex_not_starts_with: String
  api5eIndex_ends_with: String
  api5eIndex_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  highLevel: String
  highLevel_not: String
  highLevel_in: [String!]
  highLevel_not_in: [String!]
  highLevel_lt: String
  highLevel_lte: String
  highLevel_gt: String
  highLevel_gte: String
  highLevel_contains: String
  highLevel_not_contains: String
  highLevel_starts_with: String
  highLevel_not_starts_with: String
  highLevel_ends_with: String
  highLevel_not_ends_with: String
  page: String
  page_not: String
  page_in: [String!]
  page_not_in: [String!]
  page_lt: String
  page_lte: String
  page_gt: String
  page_gte: String
  page_contains: String
  page_not_contains: String
  page_starts_with: String
  page_not_starts_with: String
  page_ends_with: String
  page_not_ends_with: String
  range: String
  range_not: String
  range_in: [String!]
  range_not_in: [String!]
  range_lt: String
  range_lte: String
  range_gt: String
  range_gte: String
  range_contains: String
  range_not_contains: String
  range_starts_with: String
  range_not_starts_with: String
  range_ends_with: String
  range_not_ends_with: String
  components: String
  components_not: String
  components_in: [String!]
  components_not_in: [String!]
  components_lt: String
  components_lte: String
  components_gt: String
  components_gte: String
  components_contains: String
  components_not_contains: String
  components_starts_with: String
  components_not_starts_with: String
  components_ends_with: String
  components_not_ends_with: String
  ritual: Boolean
  ritual_not: Boolean
  concentration: Boolean
  concentration_not: Boolean
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  castingTime: String
  castingTime_not: String
  castingTime_in: [String!]
  castingTime_not_in: [String!]
  castingTime_lt: String
  castingTime_lte: String
  castingTime_gt: String
  castingTime_gte: String
  castingTime_contains: String
  castingTime_not_contains: String
  castingTime_starts_with: String
  castingTime_not_starts_with: String
  castingTime_ends_with: String
  castingTime_not_ends_with: String
  material: String
  material_not: String
  material_in: [String!]
  material_not_in: [String!]
  material_lt: String
  material_lte: String
  material_gt: String
  material_gte: String
  material_contains: String
  material_not_contains: String
  material_starts_with: String
  material_not_starts_with: String
  material_ends_with: String
  material_not_ends_with: String
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  school: String
  school_not: String
  school_in: [String!]
  school_not_in: [String!]
  school_lt: String
  school_lte: String
  school_gt: String
  school_gte: String
  school_contains: String
  school_not_contains: String
  school_starts_with: String
  school_not_starts_with: String
  school_ends_with: String
  school_not_ends_with: String
  klasses: String
  klasses_not: String
  klasses_in: [String!]
  klasses_not_in: [String!]
  klasses_lt: String
  klasses_lte: String
  klasses_gt: String
  klasses_gte: String
  klasses_contains: String
  klasses_not_contains: String
  klasses_starts_with: String
  klasses_not_starts_with: String
  klasses_ends_with: String
  klasses_not_ends_with: String
  AND: [SpellScalarWhereInput!]
  OR: [SpellScalarWhereInput!]
  NOT: [SpellScalarWhereInput!]
}

type SpellSubscriptionPayload {
  mutation: MutationType!
  node: Spell
  updatedFields: [String!]
  previousValues: SpellPreviousValues
}

input SpellSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SpellWhereInput
  AND: [SpellSubscriptionWhereInput!]
  OR: [SpellSubscriptionWhereInput!]
  NOT: [SpellSubscriptionWhereInput!]
}

input SpellUpdateDataInput {
  api5eId: String
  api5eIndex: String
  name: String
  description: String
  highLevel: String
  page: String
  range: String
  components: String
  ritual: Boolean
  concentration: Boolean
  duration: String
  castingTime: String
  material: String
  level: Int
  school: String
  klasses: String
}

input SpellUpdateInput {
  api5eId: String
  api5eIndex: String
  name: String
  description: String
  highLevel: String
  page: String
  range: String
  components: String
  ritual: Boolean
  concentration: Boolean
  duration: String
  castingTime: String
  material: String
  level: Int
  school: String
  klasses: String
}

input SpellUpdateManyDataInput {
  api5eId: String
  api5eIndex: String
  name: String
  description: String
  highLevel: String
  page: String
  range: String
  components: String
  ritual: Boolean
  concentration: Boolean
  duration: String
  castingTime: String
  material: String
  level: Int
  school: String
  klasses: String
}

input SpellUpdateManyInput {
  create: [SpellCreateInput!]
  update: [SpellUpdateWithWhereUniqueNestedInput!]
  upsert: [SpellUpsertWithWhereUniqueNestedInput!]
  delete: [SpellWhereUniqueInput!]
  connect: [SpellWhereUniqueInput!]
  set: [SpellWhereUniqueInput!]
  disconnect: [SpellWhereUniqueInput!]
  deleteMany: [SpellScalarWhereInput!]
  updateMany: [SpellUpdateManyWithWhereNestedInput!]
}

input SpellUpdateManyMutationInput {
  api5eId: String
  api5eIndex: String
  name: String
  description: String
  highLevel: String
  page: String
  range: String
  components: String
  ritual: Boolean
  concentration: Boolean
  duration: String
  castingTime: String
  material: String
  level: Int
  school: String
  klasses: String
}

input SpellUpdateManyWithWhereNestedInput {
  where: SpellScalarWhereInput!
  data: SpellUpdateManyDataInput!
}

input SpellUpdateWithWhereUniqueNestedInput {
  where: SpellWhereUniqueInput!
  data: SpellUpdateDataInput!
}

input SpellUpsertWithWhereUniqueNestedInput {
  where: SpellWhereUniqueInput!
  update: SpellUpdateDataInput!
  create: SpellCreateInput!
}

input SpellWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  api5eId: String
  api5eId_not: String
  api5eId_in: [String!]
  api5eId_not_in: [String!]
  api5eId_lt: String
  api5eId_lte: String
  api5eId_gt: String
  api5eId_gte: String
  api5eId_contains: String
  api5eId_not_contains: String
  api5eId_starts_with: String
  api5eId_not_starts_with: String
  api5eId_ends_with: String
  api5eId_not_ends_with: String
  api5eIndex: String
  api5eIndex_not: String
  api5eIndex_in: [String!]
  api5eIndex_not_in: [String!]
  api5eIndex_lt: String
  api5eIndex_lte: String
  api5eIndex_gt: String
  api5eIndex_gte: String
  api5eIndex_contains: String
  api5eIndex_not_contains: String
  api5eIndex_starts_with: String
  api5eIndex_not_starts_with: String
  api5eIndex_ends_with: String
  api5eIndex_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  highLevel: String
  highLevel_not: String
  highLevel_in: [String!]
  highLevel_not_in: [String!]
  highLevel_lt: String
  highLevel_lte: String
  highLevel_gt: String
  highLevel_gte: String
  highLevel_contains: String
  highLevel_not_contains: String
  highLevel_starts_with: String
  highLevel_not_starts_with: String
  highLevel_ends_with: String
  highLevel_not_ends_with: String
  page: String
  page_not: String
  page_in: [String!]
  page_not_in: [String!]
  page_lt: String
  page_lte: String
  page_gt: String
  page_gte: String
  page_contains: String
  page_not_contains: String
  page_starts_with: String
  page_not_starts_with: String
  page_ends_with: String
  page_not_ends_with: String
  range: String
  range_not: String
  range_in: [String!]
  range_not_in: [String!]
  range_lt: String
  range_lte: String
  range_gt: String
  range_gte: String
  range_contains: String
  range_not_contains: String
  range_starts_with: String
  range_not_starts_with: String
  range_ends_with: String
  range_not_ends_with: String
  components: String
  components_not: String
  components_in: [String!]
  components_not_in: [String!]
  components_lt: String
  components_lte: String
  components_gt: String
  components_gte: String
  components_contains: String
  components_not_contains: String
  components_starts_with: String
  components_not_starts_with: String
  components_ends_with: String
  components_not_ends_with: String
  ritual: Boolean
  ritual_not: Boolean
  concentration: Boolean
  concentration_not: Boolean
  duration: String
  duration_not: String
  duration_in: [String!]
  duration_not_in: [String!]
  duration_lt: String
  duration_lte: String
  duration_gt: String
  duration_gte: String
  duration_contains: String
  duration_not_contains: String
  duration_starts_with: String
  duration_not_starts_with: String
  duration_ends_with: String
  duration_not_ends_with: String
  castingTime: String
  castingTime_not: String
  castingTime_in: [String!]
  castingTime_not_in: [String!]
  castingTime_lt: String
  castingTime_lte: String
  castingTime_gt: String
  castingTime_gte: String
  castingTime_contains: String
  castingTime_not_contains: String
  castingTime_starts_with: String
  castingTime_not_starts_with: String
  castingTime_ends_with: String
  castingTime_not_ends_with: String
  material: String
  material_not: String
  material_in: [String!]
  material_not_in: [String!]
  material_lt: String
  material_lte: String
  material_gt: String
  material_gte: String
  material_contains: String
  material_not_contains: String
  material_starts_with: String
  material_not_starts_with: String
  material_ends_with: String
  material_not_ends_with: String
  level: Int
  level_not: Int
  level_in: [Int!]
  level_not_in: [Int!]
  level_lt: Int
  level_lte: Int
  level_gt: Int
  level_gte: Int
  school: String
  school_not: String
  school_in: [String!]
  school_not_in: [String!]
  school_lt: String
  school_lte: String
  school_gt: String
  school_gte: String
  school_contains: String
  school_not_contains: String
  school_starts_with: String
  school_not_starts_with: String
  school_ends_with: String
  school_not_ends_with: String
  klasses: String
  klasses_not: String
  klasses_in: [String!]
  klasses_not_in: [String!]
  klasses_lt: String
  klasses_lte: String
  klasses_gt: String
  klasses_gte: String
  klasses_contains: String
  klasses_not_contains: String
  klasses_starts_with: String
  klasses_not_starts_with: String
  klasses_ends_with: String
  klasses_not_ends_with: String
  AND: [SpellWhereInput!]
  OR: [SpellWhereInput!]
  NOT: [SpellWhereInput!]
}

input SpellWhereUniqueInput {
  id: ID
}

type Subscription {
  character(where: CharacterSubscriptionWhereInput): CharacterSubscriptionPayload
  spell(where: SpellSubscriptionWhereInput): SpellSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  avatarUrl: String
  characters(where: CharacterWhereInput, orderBy: CharacterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Character!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  username: String!
  password: String!
  avatarUrl: String
  characters: CharacterCreateManyWithoutUserInput
}

input UserCreateOneWithoutCharactersInput {
  create: UserCreateWithoutCharactersInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCharactersInput {
  id: ID
  username: String!
  password: String!
  avatarUrl: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  username_ASC
  username_DESC
  password_ASC
  password_DESC
  avatarUrl_ASC
  avatarUrl_DESC
}

type UserPreviousValues {
  id: ID!
  createdAt: DateTime!
  username: String!
  password: String!
  avatarUrl: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  username: String
  password: String
  avatarUrl: String
  characters: CharacterUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  username: String
  password: String
  avatarUrl: String
}

input UserUpdateOneRequiredWithoutCharactersInput {
  create: UserCreateWithoutCharactersInput
  update: UserUpdateWithoutCharactersDataInput
  upsert: UserUpsertWithoutCharactersInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutCharactersDataInput {
  username: String
  password: String
  avatarUrl: String
}

input UserUpsertWithoutCharactersInput {
  update: UserUpdateWithoutCharactersDataInput!
  create: UserCreateWithoutCharactersInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  avatarUrl: String
  avatarUrl_not: String
  avatarUrl_in: [String!]
  avatarUrl_not_in: [String!]
  avatarUrl_lt: String
  avatarUrl_lte: String
  avatarUrl_gt: String
  avatarUrl_gte: String
  avatarUrl_contains: String
  avatarUrl_not_contains: String
  avatarUrl_starts_with: String
  avatarUrl_not_starts_with: String
  avatarUrl_ends_with: String
  avatarUrl_not_ends_with: String
  characters_every: CharacterWhereInput
  characters_some: CharacterWhereInput
  characters_none: CharacterWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  username: String
}
`
      }
    